
Password Manager System using C++ 

Code-

#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include <iomanip>
#include <openssl/sha.h> // Requires OpenSSL library

using namespace std;

// User database (for demonstration purposes)
struct User {
    string username;
    string hashedPassword;
};

User users[100]; // Assuming a maximum of 100 users

// Hash a password using SHA-256
string hashPassword(const string& password) {
    unsigned char hash[SHA256_DIGEST_LENGTH];
    SHA256_CTX sha256;
    SHA256_Init(&sha256);
    SHA256_Update(&sha256, password.c_str(), password.size());
    SHA256_Final(hash, &sha256);

    stringstream ss;
    for (int i = 0; i < SHA256_DIGEST_LENGTH; ++i) {
        ss << hex << setw(2) << setfill('0') << static_cast<int>(hash[i]);
    }
    return ss.str();
}

// Load user data from a file (for demonstration)
void loadUsers() {
    ifstream file("users.txt");
    if (!file) {
        cerr << "Error opening user file." << endl;
        exit(1);
    }

    int count = 0;
    while (file >> users[count].username >> users[count].hashedPassword) {
        ++count;
    }
    file.close();
}

// Save user data to a file (for demonstration)
void saveUsers() {
    ofstream file("users.txt");
    if (!file) {
        cerr << "Error opening user file." << endl;
        exit(1);
    }

    for (int i = 0; i < 100; ++i) {
        if (!users[i].username.empty()) {
            file << users[i].username << " " << users[i].hashedPassword << endl;
        }
    }
    file.close();
}

// Register a new user
void registerUser() {
    string username, password;
    cout << "Enter a new username: ";
    cin >> username;
    cout << "Enter a password: ";
    cin >> password;

    // Hash the password before storing it
    string hashedPassword = hashPassword(password);

    // Store the user in the database
    for (int i = 0; i < 100; ++i) {
        if (users[i].username.empty()) {
            users[i].username = username;
            users[i].hashedPassword = hashedPassword;
            break;
        }
    }
    saveUsers();
    cout << "User registered successfully!" << endl;
}

// Authenticate user
bool authenticateUser(const string& username, const string& password) {
    for (int i = 0; i < 100; ++i) {
        if (users[i].username == username) {
            return users[i].hashedPassword == hashPassword(password);
        }
    }
    return false;
}

int main() {
    loadUsers();

    string username, password;
    cout << "Enter your username: ";
    cin >> username;
    cout << "Enter your password: ";
    cin >> password;

    if (authenticateUser(username, password)) {
        cout << "Login successful!" << endl;
        // Add your application logic here
    } else {
        cout << "Invalid username or password." << endl;
    }

    return 0;
}
